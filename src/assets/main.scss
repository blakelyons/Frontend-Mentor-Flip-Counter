@import "./base.scss";
@import "./mixins.scss";

:root {
    /* ----- Primary Colors ----- */
    --clr-white: hsl(0, 0%, 100%);
    --clr-gray-blue: hsl(237, 18%, 59%);
    --clr-gray-blue-hover: hsl(237, 18%, 80%);
    --clr-soft-red: hsl(345, 95%, 68%);

    /* ----- Neutral Colors ----- */
    --clr-desaturated-blue: hsl(236, 21%, 26%);
    --clr-dark-blue: hsl(235, 15%, 14%);
    --clr-darker-blue: hsl(235, 18%, 12%);
    --clr-darker-blue-hover: hsl(235, 18%, 80%);

    /* ----- Flip Countdown Timer Settings ----- */
    --clr-main-background-color: linear-gradient(0deg, hsl(236, 21%, 26%) 0%, hsl(235, 15%, 14%) 40%);

    --number-top-background: var(--clr-desaturated-blue);
    --number-bottom-background: var(--clr-gray-blue);
    --global-border-radius: 0.6rem;
    --number-color: var(--clr-soft-red);
    --label-color: var(--clr-gray-blue);

    --animation-time: 1000ms;
    --animation-ease: linear;
    --perspective: calc(var(--number-height) * 2);
}

body.light-mode {
    /* ----- Primary Colors ----- */
    --clr-white: hsl(0, 0%, 100%);
    --clr-gray-blue: #333333;
    --clr-soft-red: hsl(206, 95%, 68%);

    /* ----- Neutral Colors ----- */
    --clr-desaturated-blue: hsl(217, 97%, 70%);
    --clr-dark-blue: hsl(195, 100%, 75%);
    --clr-darker-blue: hsl(217, 97%, 10%);

    /* ----- Flip Countdown Timer Settings ----- */

    --number-top-background: hsl(217, 97%, 70%);
    --number-bottom-background: var(--clr-gray-blue);
    --global-border-radius: 0.6rem;
    --number-color: var(--clr-darker-blue);
    --label-color: var(--clr-darker-blue);
}

.light-mode-toggle {
    display: inline-block;
    position: absolute;
    z-index: 9;
    top: 1rem;
    right: 1rem;
}

.sunrise {
    display: inline-block;
    position: absolute;
    z-index: 9;
    width: 150px;
    height: 150px;
    border-radius: 50%;
    bottom: 0;
    transform: translateY(100%);
    @include transition(1s, 0ms);
    scale: 0%;
    opacity: 0;
    box-shadow:
        0 0 0.6em hsla(51, 100%, 50%, 0.9),
        0 0 1.2em hsla(51, 100%, 50%, 0.9),
        0 0 1.8em hsla(51, 100%, 50%, 0.9),
        0 0 3em hsla(51, 100%, 50%, 0.9),
        0 0 6em hsla(51, 100%, 50%, 0.9),
        0 0 12em hsla(51, 100%, 50%, 0.9),
        0 0 24em hsla(51, 100%, 50%, 0.9);

    @media screen and (min-width: 60em) {
        width: 300px;
        height: 300px;
        border-radius: 50%;
    }

    &.rise {
        position: absolute;
        scale: 100%;
        bottom: 90px;
        transform: translateY(0);
        opacity: 1;
        @include transition-ease-in(1s, 800ms);

        @media screen and (min-width: 60em) {
            bottom: 25px;
        }
    }
}

.moonrise {
    display: inline-block;
    position: absolute;
    z-index: 9;
    width: 150px;
    height: 150px;
    border-radius: 50%;
    bottom: 0;
    transform: translateY(100%);
    @include transition(1s, 0ms);
    scale: 0%;
    opacity: 0;
    background-image: url(./moon-with-glow.png);
    background-size: 420px 420px;
    background-repeat: no-repeat;
    background-position: center;
    border: 2px solid hsla(236, 0%, 96%, 0.5);
    box-shadow:
        0 0 0.6em hsla(236, 0%, 96%, 0.5),
        0 0 1.2em hsla(236, 5%, 96%, 0.5),
        0 0 1.8em hsla(236, 5%, 96%, 0.5),
        0 0 3em hsla(236, 5%, 96%, 0.5),
        0 0 6em hsla(236, 5%, 96%, 0.5),
        0 0 12em hsla(236, 5%, 96%, 0.5),
        0 0 24em hsla(236, 5%, 96%, 0.5);

    @media screen and (min-width: 60em) {
        width: 300px;
        height: 300px;
        background-size: 840px 840px;
        border-radius: 50%;
    }

    &.rise {
        position: absolute;
        scale: 100%;
        bottom: 90px;
        transform: translateY(0);
        opacity: 1;
        @include transition-ease-in(1s, 800ms);

        @media screen and (min-width: 60em) {
            bottom: 25px;
        }
    }
}

.flip-timer {
    width: 100%;
    max-width: 50em;
    @include transition-ease-in;
    transform: translateY(50vh);
    transition-delay: 250ms;
    opacity: 0;

    &.loaded {
        opacity: 1;
        transform: translateY(0);
    }

    &.easein {
        opacity: 1;
        transform: translateY(4rem);
        @media screen and (min-width: 60em) {
            transform: translateY(-5rem);
        }
    }

    &.easeout {
        opacity: 0;
        @include transition-ease-in;
        transform: translateY(200%);
    }

    .days,
    .hours,
    .minutes,
    .seconds {
        display: grid;
        gap: 0.5rem;
        text-align: center;

        @media screen and (min-width: 60em) {
            gap: 2rem;
        }

        .label {
            margin: 0 -0.5em 0 0;
            padding: 0;
            color: var(--label-color);

            @media screen and (max-width: 40em) {
                font-size: 0.6rem;
            }
        }
    }

    .tick {
        white-space: nowrap;
    }

    .tick-flip,
    .tick-text-inline {
        font-size: 2.5rem;
        font-weight: 700;
        font-family: var(--primary-font-family);
        letter-spacing: 0;
        width: auto;
        text-indent: 0;
        padding: 0 1rem;

        @media screen and (min-width: 60em) {
            font-size: 7rem;
            min-width: 10.7rem;
            min-width: 10.71rem !important;
        }
    }

    .tick-flip-shadow {
        box-shadow: 0 0.25rem 0 var(--clr-darker-blue) !important;

        @media screen and (min-width: 60em) {
            box-shadow: 0 0.85rem 0 var(--clr-darker-blue) !important;
        }
    }

    .tick-text-inline {
        color: var(--number-color) !important;
    }

    .tick-label {
        color: var(--number-color) !important;
    }

    .tick-flip-panel {
        color: var(--number-color) !important;
        font-weight: 700 !important;
    }

    .tick-flip {
        font-family: var(--primary-font-family) !important;
    }

    .tick-flip-panel-text-wrapper {
        line-height: 1.45 !important;
    }

    .tick-flip-panel {
        background-color: var(--number-top-background) !important;
    }

    .tick-flip {
        border-radius: 0.12em !important;
    }
}

.settings-toggle-btn,
.settings-toggle-btn .settings-toggle-btn-label {
    transition: all 0.3s ease-in-out;

    svg {
        position: absolute;
        top: 0;
        left: 0;
    }
}

.settings-toggle-btn {
    display: flex;
    justify-content: center;
    align-items: center;
    position: absolute;
    top: 1.25rem;
    left: 1.5rem;
    cursor: pointer;
    color: var(--clr-gray-blue);
    z-index: 11;

    &.active {
        color: var(--clr-white);
    }

    @media screen and (min-width: 60em) {
        &:hover {
            color: var(--clr-white);

            .settings-label {
                color: var(--clr-white);
                transform: translateX(0);
                opacity: 1;
            }
        }
    }

    .settings-label {
        display: block;
        opacity: 0;
        transform: translateX(-100%);
        margin: 0.5rem 0 0 2.125rem;
        color: inherit;
        font-size: 0.875em;
        @include transition-ease-in;

        @media screen and (max-width: 40em) {
            font-size: 0.6em;
            margin-bottom: -0.5rem;
        }

        &.hide {
            display: none;
        }
    }
}

.settings-container {
    display: flex;
    flex-flow: row nowrap;
    justify-content: flex-start;
    align-items: center;
    gap: 1rem;
    position: absolute;
    top: 0.75rem;
    left: 4rem;
    z-index: 10;
    transition: all 1s cubic-bezier(0.075, 0.82, 0.165, 1);
    transform: translateX(-100%);
    opacity: 0;
    background: hsla(0, 0%, 0%, 0.7);
    border: 1px solid var(--clr-main-background-color);
    padding: 1rem;
    border-radius: var(--global-border-radius);
    min-width: 300px;

    .settings-container-form-group {
        display: grid;
        gap: 1rem;
        width: 100%;

        .label {
            display: block;
            font-size: 1rem;
            margin-bottom: 0.5rem;
        }
    }

    .button.button--save {
        pointer-events: none;
    }

    &.active {
        transform: translateX(0);
        opacity: 1;

        .button.button--save {
            pointer-events: all;
        }
    }

    &:hover:is(.settings-container-label) {
        transform: translateX(1rem);
    }
}

@media screen and (max-width: 40em) {
    .settings-container {
        margin-left: 0.75rem;
        margin-top: 0.75rem;
    }
    .settings-container,
    .settings-container .settings-container-form-group {
        display: flex;
        justify-content: flex-start;
        flex-flow: column nowrap;
        align-items: flex-start;
    }
}

input[type="date"],
input[type="time"],
input[type="text"] {
    padding: 0.5em;
    height: 40px;
    width: 100%;
    background: hsla(237, 18%, 59%, 0.3);
    outline: none;
    border: 2px solid var(--clr-gray-blue);
    border-radius: var(--global-border-radius);
    color: hsl(237, 18%, 85%);
    @include transition;
    cursor: pointer;

    &:focus,
    &:active {
        border-color: hsl(237, 18%, 85%);
        color: var(--clr-white);
    }

    @media screen and (max-width: 40em) {
        min-width: 100%;
    }
}

.button {
    display: inline-block;
    flex-flow: row nowrap;
    justify-content: center;
    align-items: center;
    color: var(--clr-white);
    padding: 0.5em 1em;
    height: 40px;
    background: var(--clr-desaturated-blue);
    outline: none;
    box-shadow: none;
    border: 2px solid var(--clr-desaturated-blue);
    cursor: pointer;
    @include transition;
    font-family: var(--primary-font-family);
    letter-spacing: 0.25em;
    border-radius: var(--global-border-radius);

    &:hover,
    &:active {
        background: hsl(236, 21%, 35%);
    }

    @media screen and (max-width: 40em) {
        margin-top: 0.5rem;
        min-width: 100%;
    }
}

::-webkit-calendar-picker-indicator {
    filter: invert(1);
}

.light-mode-toggle {
    display: flex;
    flex-flow: row nowrap;
    justify-content: flex-start;
    align-items: center;
    background: var(--clr-white);
    cursor: pointer;
    --toggle-height: 28px;
    --toggle-width: 54px;
    --toggle-border-radius: 20px;
    z-index: 10;

    width: var(--toggle-width);
    height: var(--toggle-height);
    border-radius: var(--toggle-border-radius);

    @media screen and (max-width: 40em) {
        width: calc(var(--toggle-width) / 1.4);
        height: calc(var(--toggle-height) / 1.4);
        border-radius: calc(var(--toggle-border-radius) / 1.4);
    }

    padding: 2px;
    border: 2px solid #c8c8c8;
    background: hsl(236, 21%, 26%);

    &.light {
        background: hsl(217, 97%, 70%);
        border-color: hsl(217, 97%, 60%);
        .switch-icon {
            transform: translateX(2em);

            @media screen and (max-width: 40em) {
                transform: translateX(1.4em);
            }

            .moon-icon {
                opacity: 0;
                visibility: hidden;
            }

            .sun-icon {
                opacity: 1;
                visibility: visible;
            }
        }
    }

    .switch-icon {
        position: relative;
        --icon-size: 20px;
        width: var(--icon-size);
        height: var(--icon-size);
        @include transition-switch;

        @media screen and (max-width: 40em) {
            width: calc(var(--icon-size) / 1.4);
            height: calc(var(--icon-size) / 1.4);
        }

        svg {
            width: 100%;
        }

        .moon-icon,
        .sun-icon {
            @include transition-switch;
            position: absolute;
        }

        .moon-icon {
            visibility: visible;
            opacity: 1;
        }

        .sun-icon {
            visibility: hidden;
            opacity: 0;
        }
    }
}

.light-mode-toggle[data-mode="light"] {
    .switch-icon {
        transform: translateX(100%);
    }
}

.tick-flip {
    max-width: 4.29rem !important;
    @media screen and (min-width: 60em) {
        width: 10.72rem !important;
    }
}

.flip-timer .tick-flip > .tick-flip-card {
    border-bottom: 2px solid var(--clr-darker-blue);
    overflow: hidden;

    &:before,
    &:after {
        display: block;
        width: 0.5rem;
        height: 0.5rem;
        border-radius: 50%;
        background-color: var(--clr-darker-blue);
        content: "";
        z-index: 100;
        position: absolute;
        top: calc(50% - 0.25rem);

        @media screen and (min-width: 60em) {
            top: calc(50% - 0.5rem);
            width: 1rem;
            height: 1rem;
        }
    }

    &:before {
        left: 0;
        transform: translateX(-0.25rem);

        @media screen and (min-width: 60em) {
            transform: translateX(-0.5rem);
        }
    }

    &:after {
        right: 0;
        transform: translateX(0.25rem);

        @media screen and (min-width: 60em) {
            transform: translateX(0.5rem);
        }
    }
}
